// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Category {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  products Product[]
}

model Image {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  url       String
  productId String  @db.ObjectId
  Product   Product @relation(fields: [productId], references: [id])
}

model Rating {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  rating    Float
  userId    String   @db.ObjectId
  productId String   @db.ObjectId
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  userId    String   @db.ObjectId
  productId String   @db.ObjectId
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
}

model Product {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  price       Float
  discount    Float?
  stock       Int
  sku         String
  Category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  String?   @db.ObjectId
  images      String[]
  brand       String?
  ratings     Rating[]
  comments    Comment[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Image       Image[]
}
